---
- debug: var=rhvhost
  when: rhvhost|default(None) != None

- debug: var=storage_domain
  when: storage_domain|default(None) != None
    
- name: Execute script to get Hypervisor with more Free Mem.
  local_action: script /tmp/get_info_api.bash

- name: Fill Hyervisor var with result script execution.
  include_vars: /tmp/best_hypervisor.yml

- name: Fill Storage Domain var with result script execution.
  include_vars: /tmp/best_storage.yml

- name: "Create VM {{ current_vm.name }}"
  ovirt_vm:
    auth: "{{ ovirt_auth }}"
    state: "running"
    name: "{{ current_vm.name }}"
    clone: true
    cluster: CL_CLIENT
    host: "{{ rhvhost }}"
    storage_domain: "{{ storage_domain }}"
    template: "{{ current_vm.template }}"
    memory: "{{ current_vm.memory }}"
    memory_max: "{{ current_vm.memory }}"
    memory_guaranteed: "1GiB"
    cpu_cores: "{{ current_vm.cores }}"
    #cpu_sockets: "{{ current_vm.sockets | default(current_vm.profile.sockets) | default(omit) }}"
    comment: "{{ current_vm.comment }}"
    type: server
    high_availability: true
    nics:
      - name: nic1
        profile_name: "{{ current_vm.vnet }}"
    cloud_init:
      host_name: "{{ current_vm.name }}"
      user_name: root
      root_password: "redhat"
      custom_script: |
        runcmd:
          - echo "net.ipv6.conf.all.disable_ipv6 = 1" >> /etc/sysctl.conf
          - echo "net.ipv6.conf.default.disable_ipv6 = 1" >> /etc/sysctl.conf
          - nmcli --fields UUID con show | awk '!/UUID/ {print}' | while read line; do nmcli con delete uuid $line; done
          - nmcli con add type ethernet con-name eth0 ifname eth0
          - nmcli con mod eth0
            connection.autoconnect yes
            ipv6.method ignore
            ipv4.method manual
            ipv4.addresses "{{ current_vm.ipaddr }}"/"{{ current_vm.prefix }}"
            ipv4.gateway "{{ current_vm.defgw }}"
            ipv4.dns-search "example.com lab.example.com"
          - nmcli con up eth0
          - systemctl restart systemd-sysctl
          - yum -y remove cloud-init
          - head -11 /etc/fstab > /tmp/fstab.tmp
          - cat /tmp/fstab.tmp > /etc/fstab
        coreos:
          units:
          - name: systemd-sysctl.service
            command: restart
    wait: true
  #changed_when: false
  #register: added_vm

#- set_fact:
    #all_vms: "{{ all_vms | default([]) + [added_vm] }}"
